use crate::types::library::{LibraryItem, LibraryItemState};
use crate::types::resource::{MetaItemBehaviorHints, PosterShape};
use crate::unit_tests::serde::default_tokens_ext::DefaultTokens;
use chrono::{TimeZone, Utc};
use serde_test::{assert_de_tokens, assert_ser_tokens, Token};
use url::Url;

#[test]
fn library_item() {
    assert_ser_tokens(
        &vec![
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: Some(Url::parse("http://poster/").unwrap()),
                poster_shape: PosterShape::default(),
                removed: true,
                temp: true,
                ctime: Some(Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap()),
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: None,
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
        ],
        &[
            vec![
                Token::Seq { len: Some(2) },
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::Some,
                Token::Str("http://poster/"),
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(true),
                Token::Str("temp"),
                Token::Bool(true),
                Token::Str("_ctime"),
                Token::Some,
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![Token::StructEnd],
            vec![
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::None,
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_ctime"),
                Token::None,
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![Token::StructEnd, Token::SeqEnd],
        ]
        .concat(),
    );
    assert_de_tokens(
        &vec![
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: None,
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: None,
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: None,
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: None,
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
            LibraryItem {
                id: "id".to_owned(),
                name: "name".to_owned(),
                r#type: "type".to_owned(),
                poster: Some(Url::parse("http://poster/").unwrap()),
                poster_shape: PosterShape::default(),
                removed: false,
                temp: false,
                ctime: None,
                mtime: Utc.with_ymd_and_hms(2020, 1, 1, 0, 0, 0).unwrap(),
                state: LibraryItemState::default(),
                behavior_hints: MetaItemBehaviorHints::default(),
            },
        ],
        &[
            vec![
                Token::Seq { len: Some(2) },
                Token::Struct {
                    name: "LibraryItem",
                    len: 7,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![
                Token::StructEnd,
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::Some,
                Token::Str(""),
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_ctime"),
                Token::Some,
                Token::Str(""),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![
                Token::StructEnd,
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::None,
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_ctime"),
                Token::Some,
                Token::Str(""),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![
                Token::StructEnd,
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::Str("/poster"),
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_ctime"),
                Token::Some,
                Token::Str(""),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![
                Token::StructEnd,
                Token::Struct {
                    name: "LibraryItem",
                    len: 11,
                },
                Token::Str("_id"),
                Token::Str("id"),
                Token::Str("name"),
                Token::Str("name"),
                Token::Str("type"),
                Token::Str("type"),
                Token::Str("poster"),
                Token::Str("http://poster/"),
                Token::Str("posterShape"),
            ],
            PosterShape::default_tokens(),
            vec![
                Token::Str("removed"),
                Token::Bool(false),
                Token::Str("temp"),
                Token::Bool(false),
                Token::Str("_ctime"),
                Token::Some,
                Token::Str(""),
                Token::Str("_mtime"),
                Token::Str("2020-01-01T00:00:00Z"),
                Token::Str("state"),
            ],
            LibraryItemState::default_tokens(),
            vec![Token::Str("behaviorHints")],
            MetaItemBehaviorHints::default_tokens(),
            vec![Token::StructEnd, Token::SeqEnd],
        ]
        .concat(),
    );
}
